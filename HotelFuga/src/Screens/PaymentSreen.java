/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Screens;

/**
 *
 * @author henri
 */
public class PaymentSreen extends javax.swing.JFrame {

    /**
     * Creates new form PaymentSreen
     */
    public PaymentSreen() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        petField = new javax.swing.JTextField();
        registerTutorButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        registerTutorButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();

        jLabel5.setText("Nome Completo");

        nameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameFieldActionPerformed(evt);
            }
        });

        jLabel8.setText("Pet");

        petField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                petFieldActionPerformed(evt);
            }
        });

        registerTutorButton.setText("Cadastrar Tutor");
        registerTutorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerTutorButtonActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"", null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "N°", "Tamanho", "Animal", "Entrada", "Saída", "Situação"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/logo_hotel.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        jLabel2.setText("Pagamento");

        registerTutorButton1.setText("Pagamento conclúido");
        registerTutorButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerTutorButton1ActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"", null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nome do Tutor", "Nome do Pet", "Tipo de pagamento", "Valor"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(210, 210, 210)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(registerTutorButton1)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 467, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(registerTutorButton1)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameFieldActionPerformed

    private void petFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_petFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_petFieldActionPerformed

    private void registerTutorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerTutorButtonActionPerformed
        // TODO add your handling code here:
        Tutor tutor = new Tutor();
        tutor.setCpfTutor(cpfField.getText());
        tutor.setNameTutor(nameField.getText());
        tutor.setTelephoneTutor(telephoneField.getText());
        tutor.setEmergencyTelephoneTutor(emergencyTelephoneField.getText());
        tutor.setAddress(addressField.getText());
        tutor.setNumberAddress(numberAddressField.getText());
        tutor.setCep(cepField.getText());
        tutor.setPet(petField.getText());
        DataBase db = new DataBase();

        //check cpf
        // Remove todos os caracteres não numéricos
        String cpfFormatado = tutor.getCpfTutor().replaceAll("[^0-9]", "");

        // Verifica se o CPF tem 11 dígitos
        if (cpfFormatado.length() != 11) {
            System.out.println("O CPF NÃO está no formato correto.");
            return;
        }

        // Verifica se todos os caracteres são iguais
        if (cpfFormatado.matches("(\\d)\\1{10}")) {
            System.out.println("O CPF NÃO está no formato correto.");
            return;
        }

        // Calcula o primeiro dígito verificador (D1)
        int soma = 0;
        for (int i = 0; i < 9; i++) {
            soma += Character.getNumericValue(cpfFormatado.charAt(i)) * (10 - i);
        }
        int primeiroDigito = 11 - (soma % 11);
        if (primeiroDigito > 9) {
            primeiroDigito = 0;
        }

        // Calcula o segundo dígito verificador (D2)
        soma = 0;
        for (int i = 0; i < 10; i++) {
            soma += Character.getNumericValue(cpfFormatado.charAt(i)) * (11 - i);
        }

        int segundoDigito = 11 - (soma % 11);
        if (segundoDigito > 9) {
            segundoDigito = 0;
        }

        // Verifica se os dígitos verificadores estão corretos
        if (Character.getNumericValue(cpfFormatado.charAt(9)) == primeiroDigito
            && Character.getNumericValue(cpfFormatado.charAt(10)) == segundoDigito) {

        } else {
            JOptionPane.showMessageDialog(null, "Cpf em formato inválido\n" );
        }

        /*//check telephone
        // Define o padrão para o formato (XX) XXXX-XXXX

        String telephoneFormat = "^\\(\\d{2}\\)\\s\\d{4}-\\d{4}$";

        // Compila a expressão regular
        Pattern regex = Pattern.compile(telephoneFormat);

        // Cria um objeto Matcher para comparar a string fornecida com o padrão
        Matcher matcher2 = regex.matcher(tutor.getTelephoneTutor());

        if (matcher2.matches()) {

        } else {
            JOptionPane.showMessageDialog(null, "Telefone em formato inválido\n" );
        }*/

        db.registerTutor(tutor.getCpfTutor(), tutor.getNameTutor(), tutor.getPet(), tutor.getTelephoneTutor(), tutor.getEmergencyTelephoneTutor(),tutor.getCep(), tutor.getAddress(), tutor.getNumberAddress());

        RegisterPetScreen registerpetscreen = new RegisterPetScreen();
        registerpetscreen.setVisible(true);

    }//GEN-LAST:event_registerTutorButtonActionPerformed

    private void registerTutorButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerTutorButton1ActionPerformed
        // TODO add your handling code here:
        Tutor tutor = new Tutor();
        tutor.setCpfTutor(cpfField.getText());
        tutor.setNameTutor(nameField.getText());
        tutor.setTelephoneTutor(telephoneField.getText());
        tutor.setEmergencyTelephoneTutor(emergencyTelephoneField.getText());
        tutor.setAddress(addressField.getText());
        tutor.setNumberAddress(numberAddressField.getText());
        tutor.setCep(cepField.getText());
        tutor.setPet(petField.getText());
        DataBase db = new DataBase();

        //check cpf
        // Remove todos os caracteres não numéricos
        String cpfFormatado = tutor.getCpfTutor().replaceAll("[^0-9]", "");

        // Verifica se o CPF tem 11 dígitos
        if (cpfFormatado.length() != 11) {
            System.out.println("O CPF NÃO está no formato correto.");
            return;
        }

        // Verifica se todos os caracteres são iguais
        if (cpfFormatado.matches("(\\d)\\1{10}")) {
            System.out.println("O CPF NÃO está no formato correto.");
            return;
        }

        // Calcula o primeiro dígito verificador (D1)
        int soma = 0;
        for (int i = 0; i < 9; i++) {
            soma += Character.getNumericValue(cpfFormatado.charAt(i)) * (10 - i);
        }
        int primeiroDigito = 11 - (soma % 11);
        if (primeiroDigito > 9) {
            primeiroDigito = 0;
        }

        // Calcula o segundo dígito verificador (D2)
        soma = 0;
        for (int i = 0; i < 10; i++) {
            soma += Character.getNumericValue(cpfFormatado.charAt(i)) * (11 - i);
        }

        int segundoDigito = 11 - (soma % 11);
        if (segundoDigito > 9) {
            segundoDigito = 0;
        }

        // Verifica se os dígitos verificadores estão corretos
        if (Character.getNumericValue(cpfFormatado.charAt(9)) == primeiroDigito
            && Character.getNumericValue(cpfFormatado.charAt(10)) == segundoDigito) {

        } else {
            JOptionPane.showMessageDialog(null, "Cpf em formato inválido\n" );
        }

        /*//check telephone
        // Define o padrão para o formato (XX) XXXX-XXXX

        String telephoneFormat = "^\\(\\d{2}\\)\\s\\d{4}-\\d{4}$";

        // Compila a expressão regular
        Pattern regex = Pattern.compile(telephoneFormat);

        // Cria um objeto Matcher para comparar a string fornecida com o padrão
        Matcher matcher2 = regex.matcher(tutor.getTelephoneTutor());

        if (matcher2.matches()) {

        } else {
            JOptionPane.showMessageDialog(null, "Telefone em formato inválido\n" );
        }*/

        db.registerTutor(tutor.getCpfTutor(), tutor.getNameTutor(), tutor.getPet(), tutor.getTelephoneTutor(), tutor.getEmergencyTelephoneTutor(),tutor.getCep(), tutor.getAddress(), tutor.getNumberAddress());

        RegisterPetScreen registerpetscreen = new RegisterPetScreen();
        registerpetscreen.setVisible(true);

    }//GEN-LAST:event_registerTutorButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PaymentSreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PaymentSreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PaymentSreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PaymentSreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PaymentSreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField nameField;
    private javax.swing.JTextField petField;
    private javax.swing.JButton registerTutorButton;
    private javax.swing.JButton registerTutorButton1;
    // End of variables declaration//GEN-END:variables
}
